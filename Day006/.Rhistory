seq(1:10, 2)
# 변수
# 벡터(vector): 1차원 배열
## c(), start:end, seq(from, to, by), rep(vector, times or each)
x <- c(1:5)
x
y <- 1:5
z <- seq(1, 5, 1)
a <- c("1", "2", "3")
a <- c("1", "2", "3", 4, 5, 6)
c(1, 2, 3, c(1, 2, 3))
xx<- c(1:3, c(4:6))
# 접근방법: [index]
xx[3]
xx[4]
## xx
xx[xx %% 2 == 0]
yy <- c('a', 'b', 'c')
yy[-3]
## 벡터의 각 요소에 이름 부여
names(yy) <- c('kim', 'lee', 'park')
yy
names(yy)[2]
# 벡터의 길이: length() or NROW() - 대문자임을 주의 소문자는 행렬에서 쓰는 것
x <- c('a', 'b', 'c')
length(x)
nrow(x)
# 벡터 연산
## %in%
'a' %in% x
# 리스트(List): 파이썬의 딕셔너리(사전) 자료형과 동일
## 키 = 값의 형태로 데이터를 관리한다.
## 키는 중복불가, 값은 중복가능
x <- list(name = 'foo', height = 70)
x
x[1]
x[2]
## 리스트를 구성하고 있는 각 요소는 크기와 자료형이 달라도 가능하다.
x <- list(name = 'foo', height = c(1, 2, 3))
x[2]
x[2, 1]
x[2][1]
x[[2][2]]
x[2][2]
x[[2]][2]
y <- list(a =list(val = c(1, 2, 3)), b = list(val = c(1, 2, 3, 4)))
y
# 행렬(matrix): 여러 개의 벡터가 결합되어 있는 상태
matrix(1:9, nrow = 3)
matirx(1:9, ncol = 3)
matrix(1:9, ncol = 3)
matrix(1:9 nrow = 3, byrow = T)
matrix(1:9, nrow = 3, byrow = T)
## 행과 열에 이름을 부여 dimnames(list()) 주의 꼭 list타입이어야 함
matrix(1:9, nrow = 3, byrow = T,
dimnames = list(c('행1', '행2', '행3'), c('열1', '열2', '열3')))
## 행렬에 접근: [행 인덱스, 열 인덱스] or [행 조건, 열 조건]
m <- matrix(1:9, nrow = 3, byrow = T,
dimnames = list(c('행1', '행2', '행3'), c('열1', '열2', '열3')))
### 1, 2행 추출
m[1:2, ]
### 3행 제외
m[-3, ]
### 1행, 3행, 1열, 3열 추출
m[-2, -2]
? tapply
# 데이터 프레임: 행렬과 유사한 구조
data.frame(x = c(1:5), y = seq(2, 10, 2))
# 데이터 프레임: 행렬과 유사한 구조
df < -data.frame(x = c(1:5), y = seq(2, 10, 2))
# 데이터 프레임: 행렬과 유사한 구조
df <- data.frame(x = c(1:5), y = seq(2, 10, 2))
df$z <- c('M', 'F', 'M', 'F', 'M')
df
#   x  y z
# 1 1  2 M
# 2 2  4 F
# 3 3  6 M
# 4 4  8 F
# 5 5 10 M
df$x
# [1] 1 2 3 4 5
df[-1, -c(2:3)]
df[, ('x', 'z')]
df[, c('x', 'z')]
#   x z
# 1 1 M
# 2 2 F
# 3 3 M
# 4 4 F
# 5 5 M
df[, 'x', drop = F]
library(readxl)
## 필요 패키지 설치와 로딩
install.packages('foreign')
library(foreign)
library(ggplot2)
library(dplyr)
# step 2. 데이터셋 로딩
raw <- read.spss(file = 'C:/k_digital/data/Koweps_hpc10_2015_beta1.sav', to. data.frame = T)
# step 2. 데이터셋 로딩
raw <- read.spss(file = 'C:/k_digital/data/Koweps_hpc10_2015_beta1.sav', to.data.frame = T)
welfare <- raw
## step 4. 기본 데이터 분석 - 데이터 기본 정보 확인
dim(welfare)
str(welfare)
welfare <- rename(welfare,
gender= h10_g3,
year = h10_g4,
marriage = h10_g10,
religion = h10_g11,
code_job = h10_eco9,
income = p1002_8aq1,
code_region = h10_reg7)
## 1. 성별에 따른 급여의 차이는 있을까?
table(welfare$gender)
addmargins(table(welfare$gender))
### M(1) F(2)
welfare$gender <- ifelse(welfare$gender == 1, 'M', 'F')
addmargins(table(welfare$gender)) # addmargins는 합계까지 나옴
barplot(welfare$gender)
ggplot(welfare, aes(gender))
ggplot(welfare, aes(gender)) + geom_bar
ggplot(welfare, aes(gender)) + geom_bar()
### 급여정보 데이터 분석
table(welfare$income)
### 급여정보 데이터 분석
summary(welfare$income)
# 결측치 처리, 0
gender_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(mean_income = mean(income))
gender_income
## 2. 나이와 급여의 관계는 있을까?
### 파생변수 (age) = 현재년도(2015) - 출생년도
summary(welfare$year)
welfare$age <- 2015 - welfare$year + 1
## 2. 나이와 급여의 관계는 있을까?
### 파생변수 (age) = 현재년도(2015) - 출생년도 +1
summary(welfare$year)
summary(welfare$age)
head(age_income, 20)
age_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(mean_income = mean(income))
head(age_income, 20)
## 시계열 분석
ggplot(age_income, aes(x = age, y = mean_income)) + geom_line()
## 3. 연령대에 따른 급여의 차이는 있을까?
## 연령대: 청소년(30세 미만) - young, 중장년(60세 미만) - middle, 노년(60세 이상) - old
welfare$gen <- ifelse(welfare$age > 30, 'young', ifelse(welfare$age > 60, 'middle', 'old'))
table(welfare$gen)
## 3. 연령대에 따른 급여의 차이는 있을까?
## 연령대: 청소년(30세 미만) - young, 중장년(60세 미만) - middle, 노년(60세 이상) - old
welfare$gen <- ifelse(welfare$age > 30, 'young', ifelse(welfare$age < 60, 'middle', 'old'))
table(welfare$gen)
## 3. 연령대에 따른 급여의 차이는 있을까?
## 연령대: 청소년(30세 미만) - young, 중장년(60세 미만) - middle, 노년(60세 이상) - old
welfare$gen <- ifelse(welfare$age < 30, 'young', ifelse(welfare$age < 60, 'middle', 'old'))
table(welfare$gen)
ages_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(gen) %>%
summarise(mean_income = mean(income))
ages_income
## 4. 연령대와 성별에 따른 급여의 차이는 있을까?
age_gender_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(gen, age) %>%
summarise(mean_income = mean(income))
## 4. 연령대와 성별에 따른 급여의 차이는 있을까?
age_gender_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(mean_income = mean(income))
## 4. 연령대와 성별에 따른 급여의 차이는 있을까?
age_gender_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(gen, gender) %>%
summarise(mean_income = mean(income))
age_gender_income
## 5. 직업별 급여의 차이는 있을까?
## 6. 성별에 따라 선호하는 직군이 있는가?
### 엑셀 파일에서 특정 시트에 있는 내용을 불러오는 작업
jobList <- read_excel('C:/k_digital/data/Koweps_Codebook.xlsx', sheet = 2, col_names = T)
dim(jobList)
### welfare 데이터 프레임에 열 추가, 하나의 데이터 프레임으로 합치는 작업
welfare <- left_join(welfare, jobList, id = 'code_job')
? left_join
### welfare 데이터 프레임에 열 추가, 하나의 데이터 프레임으로 합치는 작업
welfare <- left_join(welfare, jobList, by = 'code_job')
head(welfare)
## 5. 직업별 급여의 차이는 있을까?
job_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(job))
## 5. 직업별 급여의 차이는 있을까?
job_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(!is.na(job)) %>%
summarise(mean_income = mean(job))
## 5. 직업별 급여의 차이는 있을까?
job_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(!is.na(job)) %>%
summarise(mean_income = mean(!is.na(job)))
job_income
summary(welfare$code_job)
## 5. 직업별 급여의 차이는 있을까?
job_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(!is.na(code_job), job) %>%
summarise(mean_income = mean(!is.na(code_job)))
job_income
## 5. 직업별 급여의 차이는 있을까?
job_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(!is.na(code_job), job) %>%
summarise(mean_income = mean(income))
job_income
gender_job <- welfare %>%
filter(!is.na(income)) %>%
group_by(gender, !is.na(code_job), job) %>%
summarise(count = n())
gender_job
gender_job <- welfare %>%
filter(!is.na(code_job)) %>%
group_by(gender, job) %>%
summarise(count = n())
gender_job
## 5. 직업별 급여의 차이는 있을까?
job_income <- welfare %>%
filter(!is.na(code_job) & !is.na(income)) %>%
group_by(, job) %>%
summarise(mean_income = mean(income))
job_income
## 5. 직업별 급여의 차이는 있을까?
job_income <- welfare %>%
filter(!is.na(code_job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income))
job_income
male_job <- welfare %>%
filter(!is.na(code_job) & gender == 'M') %>%
group_by(job) %>%
summarise(count = n())
male_job
male_job <- welfare %>%
filter(!is.na(code_job) & gender == 'M') %>%
group_by(job) %>%
summarise(count = n()) %>%
arrange(max(count))
male_job
male_job <- welfare %>%
filter(!is.na(code_job) & gender == 'M') %>%
group_by(job) %>%
summarise(count = n()) %>%
arrange(n)
male_job <- welfare %>%
filter(!is.na(code_job) & gender == 'M') %>%
group_by(job) %>%
summarise(count = n()) %>%
arrange(count)
male_job
male_job <- welfare %>%
filter(!is.na(code_job) & gender == 'M') %>%
group_by(job) %>%
summarise(count = n()) %>%
arrange(-count)
male_job
female_job <- welfare %>%
filter(!is.na(code_job) & gender == 'F') %>%
group_by(job) %>%
summarise(count = n()) %>%
arrange(-count)
female_job
## 7. 직군별 급여의 차이는 있는가?
## 8. 종교 유무에 따른 이혼율의 차이는 있는가?
summary(welfare$religion)
## 7. 직군별 급여의 차이는 있는가?
## 8. 종교 유무에 따른 이혼율의 차이는 있는가?
welfare$religion <- ifelse(welfare$religion == 1, 'Y', 'N')
welfare$marriage <- ifelse(welfare$marriage < 2, 'FAM', ifelse(welfare$marriage < 3, 'DEATH', ifelse(welfare$marriage < 4, 'DIV', ifelse(welfare$marriage < 5, 'SEP', ifelse(welfare$marriage < 6, 'NO', 'ETA')))))
## step 3. 사본
welfare <- raw
## step 5. 파생변수 생성 or 변수 이름 변경 - 가독성
welfare <- rename(welfare,
gender= h10_g3,
year = h10_g4,
marriage = h10_g10,
religion = h10_g11,
code_job = h10_eco9,
income = p1002_8aq1,
code_region = h10_reg7)
### M(1) F(2)
welfare$gender <- ifelse(welfare$gender == 1, 'M', 'F')
welfare$age <- 2015 - welfare$year + 1
## 3. 연령대에 따른 급여의 차이는 있을까?
## 연령대: 청소년(30세 미만) - young, 중장년(60세 미만) - middle, 노년(60세 이상) - old
welfare$gen <- ifelse(welfare$age < 30, 'young', ifelse(welfare$age < 60, 'middle', 'old'))
### welfare 데이터 프레임에 열 추가, 하나의 데이터 프레임으로 합치는 작업
welfare <- left_join(welfare, jobList, by = 'code_job')
## 7. 직군별 급여의 차이는 있는가?
## 8. 종교 유무에 따른 이혼율의 차이는 있는가?
### 종교 유무 1: Y(있다) 2: N(없다)
### 결혼 상태 1: FAM(유배우) 2: DEATH(사별) 3: DIV(이혼) 4: SEP(별거) 5: NO(미혼, 18세미만), 6: ETA(기타)
welfare$religion <- ifelse(welfare$religion == 1, 'Y', 'N')
summary(welfare$marriage)
welfare$marriage <- ifelse(welfare$marriage < 2, 'FAM', ifelse(welfare$marriage < 3, 'DEATH', ifelse(welfare$marriage < 4, 'DIV', ifelse(welfare$marriage < 5, 'SEP', ifelse(welfare$marriage < 6, 'NO', 'ETA')))))
